==Простой аналог сайта http://stackoverflow.com

Функционал:

1.​ Пользовательская система:

a.​ Регистрация нового пользователя

b.​ Поля пользователя: логин, email, аватар, дата рождения, страна, город, адрес.

c.​ Автоматическое определение местонахождение пользователя, после задания или изменения полей формы(страна, город, адрес) и отображние его на карте. Использовать Google Map ver 3.

d.​ Редактирование профиля

e.​ Восстановление пароля

f.​ Просмотр профиля другими пользователями

g.​ Интегрировать возможность авторизироваться с помощью Twitter или Facebook или Google App

2.​ Система вопросов\ответов:

a.​ Добавлять и редактировать вопросы пользователями

b.​ Добавлять и редактировать ответы пользователями

c.​ Голосовать за вопрос\ответ

d.​ Отвечать и голосовать могут только авторизованные пользователи

e.​ Голосование и ответы реализовать с помощью AJAX

f.​ При создании вопроса должна быть реализована возможность добавить теги.

3.​ Система ролей:

a.​ Ввести 3 роли: администратор, модератор и пользователь

b.​ Администратор: может управлять пользователями(добавлять, редактировать, удалять, назначать и менять роли)

c.​ Модератор: управляет всеми вопросами и ответами

d.​ Пользователь: может добавлять и редактировать свои вопросы и ответы.

4.​ Страницы:

a.​ Главная страница:    содержит список вопросов, упорядоченные по дате добавления. Самые свежие вверху. Есть постраничная навигация. Каждый вопрос представлен со следующей информацией: тема, рейтинг, число ответов, число просмотров, имя пользователя, аватар пользователя, теги. Так же должен присутствовать облако тегов.

b.​ Страница вопроса: содержит детальное описание вопроса, ответы. Каждый ответ имеет свой рейтинг. Ответы отсортированы по убыванию рейтинга. После всех ответов располагается форма написания ответа.

c.​ Страница просмотра профиля пользователя.

d.​ Страница редактирования профиля.

5.​ Реализовать простое API для получения информации с сайта в формате JSON (данный функционал может использоваться сторонними сервисами или приложениями, например мобильными устройствами)

a.​ список вопросов, например по запросу http://yoursite.com/api/questions       

b.​ информацию о конкретном вопросе вместе с ответами, например по запросу http://yoursite.com/api/question/1 (информация о вопросе с id=1).

6.​ Деплоить приложение на Heroku(http://heroku.com)

7.​ Выложить задание на Github(https://github.com/)

8.​ Использовать Slim(язык разметки)

9.​ Написать тесты используя rspec

10.​ Использовать RVM — Ruby Version Manager
